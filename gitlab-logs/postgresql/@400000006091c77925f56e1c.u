2021-05-04_04:37:20.41343 ERROR:  canceling statement due to statement timeout
2021-05-04_04:37:20.41346 STATEMENT:  SELECT COUNT(*) FROM projects INNER JOIN project_mirror_data ON project_mirror_data.project_id = projects.id
2021-05-04_04:37:20.41346 	INNER JOIN namespaces AS root_namespaces ON root_namespaces.id = (
2021-05-04_04:37:20.41347 	  WITH RECURSIVE "base_and_ancestors" AS (
2021-05-04_04:37:20.41347 	    (SELECT "namespaces".* FROM "namespaces" WHERE "namespaces"."id" = projects.namespace_id)
2021-05-04_04:37:20.41347 	    UNION
2021-05-04_04:37:20.41347 	    (SELECT "namespaces".* FROM "namespaces", "base_and_ancestors" WHERE "namespaces"."id" = "base_and_ancestors"."parent_id")
2021-05-04_04:37:20.41347 	  ) SELECT "namespaces".id FROM "base_and_ancestors" AS "namespaces" WHERE "namespaces"."parent_id" IS NULL
2021-05-04_04:37:20.41348 	)
2021-05-04_04:37:20.41348 	LEFT JOIN gitlab_subscriptions ON gitlab_subscriptions.namespace_id = root_namespaces.id
2021-05-04_04:37:20.41348 	LEFT JOIN plans ON plans.id = gitlab_subscriptions.hosted_plan_id
2021-05-04_04:37:20.41348 	 WHERE projects.mirror = true
2021-05-04_04:37:20.41348 	AND projects.archived = false
2021-05-04_04:37:20.41349 	AND project_mirror_data.retry_count <= 14
2021-05-04_04:37:20.41349 	AND (
2021-05-04_04:37:20.41349 	  (projects.visibility_level = 20 AND root_namespaces.visibility_level = 20)
2021-05-04_04:37:20.41349 	  OR
2021-05-04_04:37:20.41349 	  plans.name IN ('early_adopter', 'bronze', 'silver', 'gold')
2021-05-04_04:37:20.41350 	)
2021-05-04_04:37:20.41350 	AND project_mirror_data.next_execution_timestamp > '2020-03-28'
2021-05-04_04:37:20.41351 	
2021-05-04_04:37:20.41351 	AND project_mirror_data.status NOT IN ('scheduled', 'started')
2021-05-04_04:37:20.41351 	AND project_mirror_data.next_execution_timestamp <= NOW()
2021-05-04_04:37:20.41351 	;
2021-05-04_04:47:23.74938 ERROR:  canceling statement due to statement timeout
2021-05-04_04:47:23.74939 STATEMENT:  SELECT COUNT(*) FROM projects INNER JOIN project_mirror_data ON project_mirror_data.project_id = projects.id
2021-05-04_04:47:23.74940 	INNER JOIN namespaces AS root_namespaces ON root_namespaces.id = (
2021-05-04_04:47:23.74940 	  WITH RECURSIVE "base_and_ancestors" AS (
2021-05-04_04:47:23.74941 	    (SELECT "namespaces".* FROM "namespaces" WHERE "namespaces"."id" = projects.namespace_id)
2021-05-04_04:47:23.74941 	    UNION
2021-05-04_04:47:23.74941 	    (SELECT "namespaces".* FROM "namespaces", "base_and_ancestors" WHERE "namespaces"."id" = "base_and_ancestors"."parent_id")
2021-05-04_04:47:23.74942 	  ) SELECT "namespaces".id FROM "base_and_ancestors" AS "namespaces" WHERE "namespaces"."parent_id" IS NULL
2021-05-04_04:47:23.74942 	)
2021-05-04_04:47:23.74942 	LEFT JOIN gitlab_subscriptions ON gitlab_subscriptions.namespace_id = root_namespaces.id
2021-05-04_04:47:23.74943 	LEFT JOIN plans ON plans.id = gitlab_subscriptions.hosted_plan_id
2021-05-04_04:47:23.74943 	 WHERE projects.mirror = true
2021-05-04_04:47:23.74943 	AND projects.archived = false
2021-05-04_04:47:23.74944 	AND project_mirror_data.retry_count <= 14
2021-05-04_04:47:23.74944 	AND (
2021-05-04_04:47:23.74944 	  (projects.visibility_level = 20 AND root_namespaces.visibility_level = 20)
2021-05-04_04:47:23.74944 	  OR
2021-05-04_04:47:23.74945 	  plans.name IN ('early_adopter', 'bronze', 'silver', 'gold')
2021-05-04_04:47:23.74946 	)
2021-05-04_04:47:23.74946 	AND project_mirror_data.next_execution_timestamp > '2020-03-28'
2021-05-04_04:47:23.74947 	
2021-05-04_04:47:23.74947 	AND project_mirror_data.status = 'scheduled'
2021-05-04_04:47:23.74947 	;
2021-05-04_04:57:20.83282 ERROR:  canceling statement due to statement timeout
2021-05-04_04:57:20.83284 STATEMENT:  SELECT COUNT(*) FROM projects INNER JOIN project_mirror_data ON project_mirror_data.project_id = projects.id
2021-05-04_04:57:20.83285 	INNER JOIN namespaces AS root_namespaces ON root_namespaces.id = (
2021-05-04_04:57:20.83285 	  WITH RECURSIVE "base_and_ancestors" AS (
2021-05-04_04:57:20.83285 	    (SELECT "namespaces".* FROM "namespaces" WHERE "namespaces"."id" = projects.namespace_id)
2021-05-04_04:57:20.83286 	    UNION
2021-05-04_04:57:20.83287 	    (SELECT "namespaces".* FROM "namespaces", "base_and_ancestors" WHERE "namespaces"."id" = "base_and_ancestors"."parent_id")
2021-05-04_04:57:20.83287 	  ) SELECT "namespaces".id FROM "base_and_ancestors" AS "namespaces" WHERE "namespaces"."parent_id" IS NULL
2021-05-04_04:57:20.83287 	)
2021-05-04_04:57:20.83287 	LEFT JOIN gitlab_subscriptions ON gitlab_subscriptions.namespace_id = root_namespaces.id
2021-05-04_04:57:20.83287 	LEFT JOIN plans ON plans.id = gitlab_subscriptions.hosted_plan_id
2021-05-04_04:57:20.83288 	 WHERE projects.mirror = true
2021-05-04_04:57:20.83288 	AND projects.archived = false
2021-05-04_04:57:20.83288 	AND project_mirror_data.retry_count <= 14
2021-05-04_04:57:20.83288 	AND (
2021-05-04_04:57:20.83288 	  (projects.visibility_level = 20 AND root_namespaces.visibility_level = 20)
2021-05-04_04:57:20.83289 	  OR
2021-05-04_04:57:20.83289 	  plans.name IN ('early_adopter', 'bronze', 'silver', 'gold')
2021-05-04_04:57:20.83290 	)
2021-05-04_04:57:20.83290 	AND project_mirror_data.next_execution_timestamp > '2020-03-28'
2021-05-04_04:57:20.83290 	
2021-05-04_04:57:20.83290 	AND project_mirror_data.status IN ('scheduled', 'started')
2021-05-04_04:57:20.83291 	;
2021-05-04_05:02:20.93251 ERROR:  canceling statement due to statement timeout
2021-05-04_05:02:20.93253 STATEMENT:  SELECT COUNT(*) FROM projects INNER JOIN project_mirror_data ON project_mirror_data.project_id = projects.id
2021-05-04_05:02:20.93254 	INNER JOIN namespaces AS root_namespaces ON root_namespaces.id = (
2021-05-04_05:02:20.93254 	  WITH RECURSIVE "base_and_ancestors" AS (
2021-05-04_05:02:20.93254 	    (SELECT "namespaces".* FROM "namespaces" WHERE "namespaces"."id" = projects.namespace_id)
2021-05-04_05:02:20.93254 	    UNION
2021-05-04_05:02:20.93255 	    (SELECT "namespaces".* FROM "namespaces", "base_and_ancestors" WHERE "namespaces"."id" = "base_and_ancestors"."parent_id")
2021-05-04_05:02:20.93255 	  ) SELECT "namespaces".id FROM "base_and_ancestors" AS "namespaces" WHERE "namespaces"."parent_id" IS NULL
2021-05-04_05:02:20.93255 	)
2021-05-04_05:02:20.93255 	LEFT JOIN gitlab_subscriptions ON gitlab_subscriptions.namespace_id = root_namespaces.id
2021-05-04_05:02:20.93256 	LEFT JOIN plans ON plans.id = gitlab_subscriptions.hosted_plan_id
2021-05-04_05:02:20.93256 	 WHERE projects.mirror = true
2021-05-04_05:02:20.93256 	AND projects.archived = false
2021-05-04_05:02:20.93256 	AND project_mirror_data.retry_count <= 14
2021-05-04_05:02:20.93257 	AND (
2021-05-04_05:02:20.93257 	  (projects.visibility_level = 20 AND root_namespaces.visibility_level = 20)
2021-05-04_05:02:20.93257 	  OR
2021-05-04_05:02:20.93257 	  plans.name IN ('early_adopter', 'bronze', 'silver', 'gold')
2021-05-04_05:02:20.93258 	)
2021-05-04_05:02:20.93258 	AND project_mirror_data.next_execution_timestamp > '2020-03-28'
2021-05-04_05:02:20.93259 	
2021-05-04_05:02:20.93259 	AND project_mirror_data.status NOT IN ('scheduled', 'started')
2021-05-04_05:02:20.93259 	AND project_mirror_data.next_execution_timestamp <= NOW() - '10 seconds'::interval
2021-05-04_05:02:20.93259 	;
2021-05-04_05:22:07.92987 ERROR:  canceling statement due to statement timeout
2021-05-04_05:22:07.92989 STATEMENT:  SELECT relnamespace::regnamespace as schemaname,
2021-05-04_05:22:07.92990 	       relname as relname,
2021-05-04_05:22:07.92990 	       pg_total_relation_size(oid) bytes
2021-05-04_05:22:07.92990 	  FROM pg_class
2021-05-04_05:22:07.92991 	 WHERE relkind = 'r';
2021-05-04_05:22:07.92991 	
2021-05-04_05:32:20.21992 ERROR:  canceling statement due to statement timeout
2021-05-04_05:32:20.21995 STATEMENT:  SELECT COUNT(*) FROM projects INNER JOIN project_mirror_data ON project_mirror_data.project_id = projects.id
2021-05-04_05:32:20.21995 	INNER JOIN namespaces AS root_namespaces ON root_namespaces.id = (
2021-05-04_05:32:20.21996 	  WITH RECURSIVE "base_and_ancestors" AS (
2021-05-04_05:32:20.21996 	    (SELECT "namespaces".* FROM "namespaces" WHERE "namespaces"."id" = projects.namespace_id)
2021-05-04_05:32:20.21997 	    UNION
2021-05-04_05:32:20.21998 	    (SELECT "namespaces".* FROM "namespaces", "base_and_ancestors" WHERE "namespaces"."id" = "base_and_ancestors"."parent_id")
2021-05-04_05:32:20.21998 	  ) SELECT "namespaces".id FROM "base_and_ancestors" AS "namespaces" WHERE "namespaces"."parent_id" IS NULL
2021-05-04_05:32:20.21998 	)
2021-05-04_05:32:20.21998 	LEFT JOIN gitlab_subscriptions ON gitlab_subscriptions.namespace_id = root_namespaces.id
2021-05-04_05:32:20.21999 	LEFT JOIN plans ON plans.id = gitlab_subscriptions.hosted_plan_id
2021-05-04_05:32:20.21999 	 WHERE projects.mirror = true
2021-05-04_05:32:20.21999 	AND projects.archived = false
2021-05-04_05:32:20.22000 	AND project_mirror_data.retry_count <= 14
2021-05-04_05:32:20.22000 	AND (
2021-05-04_05:32:20.22000 	  (projects.visibility_level = 20 AND root_namespaces.visibility_level = 20)
2021-05-04_05:32:20.22000 	  OR
2021-05-04_05:32:20.22001 	  plans.name IN ('early_adopter', 'bronze', 'silver', 'gold')
2021-05-04_05:32:20.22002 	)
2021-05-04_05:32:20.22002 	AND project_mirror_data.next_execution_timestamp > '2020-03-28'
2021-05-04_05:32:20.22002 	
2021-05-04_05:32:20.22003 	AND project_mirror_data.status NOT IN ('scheduled', 'started')
2021-05-04_05:32:20.22003 	AND project_mirror_data.next_execution_timestamp <= NOW()
2021-05-04_05:32:20.22003 	;
2021-05-04_05:32:22.75277 ERROR:  canceling statement due to statement timeout
2021-05-04_05:32:22.75279 STATEMENT:  SELECT COUNT(*) FROM projects INNER JOIN project_mirror_data ON project_mirror_data.project_id = projects.id
2021-05-04_05:32:22.75279 	INNER JOIN namespaces AS root_namespaces ON root_namespaces.id = (
2021-05-04_05:32:22.75280 	  WITH RECURSIVE "base_and_ancestors" AS (
2021-05-04_05:32:22.75280 	    (SELECT "namespaces".* FROM "namespaces" WHERE "namespaces"."id" = projects.namespace_id)
2021-05-04_05:32:22.75281 	    UNION
2021-05-04_05:32:22.75281 	    (SELECT "namespaces".* FROM "namespaces", "base_and_ancestors" WHERE "namespaces"."id" = "base_and_ancestors"."parent_id")
2021-05-04_05:32:22.75282 	  ) SELECT "namespaces".id FROM "base_and_ancestors" AS "namespaces" WHERE "namespaces"."parent_id" IS NULL
2021-05-04_05:32:22.75282 	)
2021-05-04_05:32:22.75282 	LEFT JOIN gitlab_subscriptions ON gitlab_subscriptions.namespace_id = root_namespaces.id
2021-05-04_05:32:22.75283 	LEFT JOIN plans ON plans.id = gitlab_subscriptions.hosted_plan_id
2021-05-04_05:32:22.75283 	 WHERE projects.mirror = true
2021-05-04_05:32:22.75283 	AND projects.archived = false
2021-05-04_05:32:22.75284 	AND project_mirror_data.retry_count <= 14
2021-05-04_05:32:22.75284 	AND (
2021-05-04_05:32:22.75284 	  (projects.visibility_level = 20 AND root_namespaces.visibility_level = 20)
2021-05-04_05:32:22.75285 	  OR
2021-05-04_05:32:22.75285 	  plans.name IN ('early_adopter', 'bronze', 'silver', 'gold')
2021-05-04_05:32:22.75286 	)
2021-05-04_05:32:22.75286 	AND project_mirror_data.next_execution_timestamp > '2020-03-28'
2021-05-04_05:32:22.75287 	
2021-05-04_05:32:22.75287 	AND project_mirror_data.status NOT IN ('scheduled', 'started')
2021-05-04_05:32:22.75287 	AND (project_mirror_data.next_execution_timestamp - project_mirror_data.last_update_at) <= '30 minutes'::interval
2021-05-04_05:32:22.75288 	AND project_mirror_data.last_update_at < NOW() - '30 minutes'::interval
2021-05-04_05:32:22.75288 	;
2021-05-04_05:42:31.22472 ERROR:  canceling statement due to statement timeout
2021-05-04_05:42:31.22474 STATEMENT:  SELECT COUNT(*) FROM projects INNER JOIN project_mirror_data ON project_mirror_data.project_id = projects.id
2021-05-04_05:42:31.22475 	INNER JOIN namespaces AS root_namespaces ON root_namespaces.id = (
2021-05-04_05:42:31.22475 	  WITH RECURSIVE "base_and_ancestors" AS (
2021-05-04_05:42:31.22475 	    (SELECT "namespaces".* FROM "namespaces" WHERE "namespaces"."id" = projects.namespace_id)
2021-05-04_05:42:31.22476 	    UNION
2021-05-04_05:42:31.22476 	    (SELECT "namespaces".* FROM "namespaces", "base_and_ancestors" WHERE "namespaces"."id" = "base_and_ancestors"."parent_id")
2021-05-04_05:42:31.22477 	  ) SELECT "namespaces".id FROM "base_and_ancestors" AS "namespaces" WHERE "namespaces"."parent_id" IS NULL
2021-05-04_05:42:31.22477 	)
2021-05-04_05:42:31.22477 	LEFT JOIN gitlab_subscriptions ON gitlab_subscriptions.namespace_id = root_namespaces.id
2021-05-04_05:42:31.22477 	LEFT JOIN plans ON plans.id = gitlab_subscriptions.hosted_plan_id
2021-05-04_05:42:31.22478 	 WHERE projects.mirror = true
2021-05-04_05:42:31.22478 	AND projects.archived = false
2021-05-04_05:42:31.22478 	AND project_mirror_data.retry_count <= 14
2021-05-04_05:42:31.22478 	AND (
2021-05-04_05:42:31.22478 	  (projects.visibility_level = 20 AND root_namespaces.visibility_level = 20)
2021-05-04_05:42:31.22479 	  OR
2021-05-04_05:42:31.22479 	  plans.name IN ('early_adopter', 'bronze', 'silver', 'gold')
2021-05-04_05:42:31.22480 	)
2021-05-04_05:42:31.22480 	AND project_mirror_data.next_execution_timestamp > '2020-03-28'
2021-05-04_05:42:31.22480 	
2021-05-04_05:42:31.22480 	AND project_mirror_data.status NOT IN ('scheduled', 'started')
2021-05-04_05:42:31.22480 	AND project_mirror_data.next_execution_timestamp <= NOW() - '10 seconds'::interval
2021-05-04_05:42:31.22481 	;
2021-05-04_05:52:22.00397 ERROR:  canceling statement due to statement timeout
2021-05-04_05:52:22.00399 STATEMENT:  SELECT COUNT(*) FROM projects INNER JOIN project_mirror_data ON project_mirror_data.project_id = projects.id
2021-05-04_05:52:22.00399 	INNER JOIN namespaces AS root_namespaces ON root_namespaces.id = (
2021-05-04_05:52:22.00399 	  WITH RECURSIVE "base_and_ancestors" AS (
2021-05-04_05:52:22.00400 	    (SELECT "namespaces".* FROM "namespaces" WHERE "namespaces"."id" = projects.namespace_id)
2021-05-04_05:52:22.00400 	    UNION
2021-05-04_05:52:22.00400 	    (SELECT "namespaces".* FROM "namespaces", "base_and_ancestors" WHERE "namespaces"."id" = "base_and_ancestors"."parent_id")
2021-05-04_05:52:22.00400 	  ) SELECT "namespaces".id FROM "base_and_ancestors" AS "namespaces" WHERE "namespaces"."parent_id" IS NULL
2021-05-04_05:52:22.00400 	)
2021-05-04_05:52:22.00401 	LEFT JOIN gitlab_subscriptions ON gitlab_subscriptions.namespace_id = root_namespaces.id
2021-05-04_05:52:22.00401 	LEFT JOIN plans ON plans.id = gitlab_subscriptions.hosted_plan_id
2021-05-04_05:52:22.00401 	 WHERE projects.mirror = true
2021-05-04_05:52:22.00401 	AND projects.archived = false
2021-05-04_05:52:22.00402 	AND project_mirror_data.retry_count <= 14
2021-05-04_05:52:22.00402 	AND (
2021-05-04_05:52:22.00402 	  (projects.visibility_level = 20 AND root_namespaces.visibility_level = 20)
2021-05-04_05:52:22.00402 	  OR
2021-05-04_05:52:22.00403 	  plans.name IN ('early_adopter', 'bronze', 'silver', 'gold')
2021-05-04_05:52:22.00404 	)
2021-05-04_05:52:22.00404 	AND project_mirror_data.next_execution_timestamp > '2020-03-28'
2021-05-04_05:52:22.00404 	
2021-05-04_05:52:22.00404 	AND project_mirror_data.status IN ('scheduled', 'started')
2021-05-04_05:52:22.00404 	;
2021-05-04_08:48:30.64165 ERROR:  canceling statement due to statement timeout
2021-05-04_08:48:30.64167 STATEMENT:            SELECT relname,seq_tup_read,idx_tup_fetch,n_tup_ins,n_tup_upd,n_tup_del,n_tup_hot_upd,n_dead_tup,seq_scan
2021-05-04_08:48:30.64168 	          FROM pg_stat_user_tables
2021-05-04_08:48:30.64168 	          WHERE relname IN (SELECT tablename FROM pg_tables WHERE tableowner = 'gitlab')
2021-05-04_08:48:30.64168 	          GROUP BY relname,seq_tup_read,idx_tup_fetch,n_tup_ins,n_tup_upd,n_tup_del,n_tup_hot_upd,n_dead_tup,seq_scan
2021-05-04_08:48:30.64168 	
2021-05-04_08:48:30.64350 ERROR:  canceling statement due to statement timeout
2021-05-04_08:48:30.64351 STATEMENT:  with table_opts_vs_statistic as (
2021-05-04_08:48:30.64351 	  select
2021-05-04_08:48:30.64352 	    pg_class.oid,
2021-05-04_08:48:30.64352 	    pg_class.relname,
2021-05-04_08:48:30.64352 	    coalesce(nspname, 'public') as schemaname,
2021-05-04_08:48:30.64352 	    pg_class.relpages,
2021-05-04_08:48:30.64352 	    pg_class.reltuples,
2021-05-04_08:48:30.64353 	    case
2021-05-04_08:48:30.64353 	      when array_to_string(reloptions, '') like '%autovacuum_vacuum_threshold%' then regexp_replace(array_to_string(reloptions, ''), '.*autovacuum_vacuum_threshold=([0-9.]+).*', E'\\1')::int8
2021-05-04_08:48:30.64354 	      else current_setting('autovacuum_vacuum_threshold')::int8
2021-05-04_08:48:30.64354 	    end as autovacuum_vacuum_threshold,
2021-05-04_08:48:30.64354 	    case
2021-05-04_08:48:30.64354 	      when array_to_string(reloptions, '') like '%autovacuum_vacuum_scale_factor%' then regexp_replace(array_to_string(reloptions, ''), '.*autovacuum_vacuum_scale_factor=([0-9.]+).*', E'\\1')::numeric
2021-05-04_08:48:30.64354 	      else current_setting('autovacuum_vacuum_scale_factor')::numeric
2021-05-04_08:48:30.64355 	    end as autovacuum_vacuum_scale_factor,
2021-05-04_08:48:30.64355 	    case when array_to_string(reloptions, '') ~ 'autovacuum_enabled=(false|off)' then false else true end as autovacuum_enabled,
2021-05-04_08:48:30.64355 	    n_dead_tup,
2021-05-04_08:48:30.64356 	    last_autovacuum,
2021-05-04_08:48:30.64356 	    last_vacuum
2021-05-04_08:48:30.64356 	  from pg_class
2021-05-04_08:48:30.64356 	  join pg_namespace ns on relnamespace = ns.oid 
2021-05-04_08:48:30.64357 	  join pg_stat_all_tables psat  on psat.relid  = pg_class.oid
2021-05-04_08:48:30.64357 	  where relkind in ('r','m') 
2021-05-04_08:48:30.64357 	), p as (
2021-05-04_08:48:30.64357 	  select pgspv.*,a.query,a.wait_event_type,a.wait_event,a.query_start
2021-05-04_08:48:30.64357 	  from pg_stat_progress_vacuum pgspv
2021-05-04_08:48:30.64358 	  left join pg_stat_activity a using (pid)
2021-05-04_08:48:30.64358 	) 
2021-05-04_08:48:30.64358 	select
2021-05-04_08:48:30.64358 	  table_opts_vs_statistic.schemaname as schemaname,
2021-05-04_08:48:30.64358 	  table_opts_vs_statistic.relname as relname,
2021-05-04_08:48:30.64359 	  round((100 * table_opts_vs_statistic.n_dead_tup::numeric / nullif(table_opts_vs_statistic.reltuples, 0))::numeric, 2) as dead_tup_pct,
2021-05-04_08:48:30.64359 	  table_opts_vs_statistic.reltuples::numeric as reltuples,
2021-05-04_08:48:30.64359 	  table_opts_vs_statistic.n_dead_tup,
2021-05-04_08:48:30.64359 	  (relpages::bigint*8*1024) AS table_size_bytes,
2021-05-04_08:48:30.64359 	  'V. Threshold:' || table_opts_vs_statistic.autovacuum_vacuum_threshold
2021-05-04_08:48:30.64360 	    || ', V. Scale Factor: ' || (table_opts_vs_statistic.autovacuum_vacuum_scale_factor)::numeric *100 ||' %'
2021-05-04_08:48:30.64360 	    || case when not autovacuum_enabled then ', DISABLED' else ', enabled' end as "effective_settings",
2021-05-04_08:48:30.64361 	  case
2021-05-04_08:48:30.64361 	    when last_autovacuum > coalesce(last_vacuum, '0001-01-01') then last_autovacuum::timestamp(0)
2021-05-04_08:48:30.64361 	    when last_vacuum is not null then last_vacuum::timestamp(0)
2021-05-04_08:48:30.64361 	    else null
2021-05-04_08:48:30.64361 	  end as "last_vacuumed",
2021-05-04_08:48:30.64362 	  case
2021-05-04_08:48:30.64362 	    when last_autovacuum > coalesce(last_vacuum, '0001-01-01') then 'auto'
2021-05-04_08:48:30.64362 	    when last_vacuum is not null then 'manual'
2021-05-04_08:48:30.64362 	    else null
2021-05-04_08:48:30.64362 	  end as "type",
2021-05-04_08:48:30.64363 	  coalesce(p.phase, 'in queue') as status,
2021-05-04_08:48:30.64363 	  p.pid as pid,
2021-05-04_08:48:30.64363 	  coalesce  (p.query,'')as  action,
2021-05-04_08:48:30.64363 	  case when p.pid is null then null else coalesce(wait_event_type ||'.'|| wait_event, 'f') end as waiting,
2021-05-04_08:48:30.64363 	  round(100.0 * p.heap_blks_scanned / nullif(p.heap_blks_total, 0), 1) AS scanned_pct,
2021-05-04_08:48:30.64364 	  round(100.0 * p.heap_blks_vacuumed / nullif(p.heap_blks_total, 0), 1) AS vacuumed_pct,
2021-05-04_08:48:30.64364 	  extract ('epoch' from  now()-query_start) elapsed_time
2021-05-04_08:48:30.64364 	from 
2021-05-04_08:48:30.64364 	table_opts_vs_statistic
2021-05-04_08:48:30.64364 	full outer join p on p.relid = table_opts_vs_statistic.oid and p.datname = current_database()
2021-05-04_08:48:30.64365 	where
2021-05-04_08:48:30.64365 	  table_opts_vs_statistic.relpages >= 8
2021-05-04_08:48:30.64366 	  and  autovacuum_vacuum_threshold + (autovacuum_vacuum_scale_factor::numeric * table_opts_vs_statistic.reltuples) < table_opts_vs_statistic.n_dead_tup
2021-05-04_08:48:30.64366 	
