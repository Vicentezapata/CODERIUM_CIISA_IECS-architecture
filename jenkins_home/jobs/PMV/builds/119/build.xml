<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@2.40">
  <actions>
    <org.jenkinsci.plugins.workflow.cps.replay.ReplayFlowFactoryAction plugin="workflow-cps@2.90">
      <replacementLoadedScripts/>
    </org.jenkinsci.plugins.workflow.cps.replay.ReplayFlowFactoryAction>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>vzapata</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
        <entry>
          <org.jenkinsci.plugins.workflow.cps.replay.ReplayCause plugin="workflow-cps@2.90">
            <originalNumber>118</originalNumber>
          </org.jenkinsci.plugins.workflow.cps.replay.ReplayCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@2.19">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2.90">
      <env class="tree-map">
        <entry>
          <string>REPO</string>
          <string>https://github.com/Vicentezapata/IADSO_CIISA_IECS_REPO_TEST.git</string>
        </entry>
      </env>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <org.jenkinsci.plugins.workflow.support.steps.input.InputAction plugin="pipeline-input-step@2.12">
      <ids class="java.util.concurrent.CopyOnWriteArrayList"/>
    </org.jenkinsci.plugins.workflow.support.steps.input.InputAction>
    <com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder plugin="credentials@2.3.18">
      <boundCredentials class="concurrent-hash-map"/>
    </com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder>
    <org.jenkinsci.plugins.workflow.support.steps.input.ApproverAction plugin="pipeline-input-step@2.12">
      <userId>vzapata</userId>
    </org.jenkinsci.plugins.workflow.support.steps.input.ApproverAction>
    <hudson.plugins.git.util.BuildData plugin="git@4.7.1">
      <buildsByBranchName>
        <entry>
          <string>refs/remotes/origin/master</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.7.1">
              <sha1>aaa66aca2a86e09797a3ea1a0383c8037bff2380</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/master</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>119</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://github.com/Vicentezapata/IADSO_CIISA_IECS_REPO_TEST.git</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState plugin="workflow-scm-step@2.12">
      <revisionStates>
        <entry>
          <string>git https://github.com/Vicentezapata/IADSO_CIISA_IECS_REPO_TEST.git</string>
          <hudson.scm.SCMRevisionState_-None/>
        </entry>
      </revisionStates>
    </org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState>
  </actions>
  <queueId>231</queueId>
  <timestamp>1620853157186</timestamp>
  <startTime>1620853157200</startTime>
  <result>FAILURE</result>
  <duration>19256</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>FAILURE</result>
    <script>node {
  env.REPO = &quot;https://github.com/Vicentezapata/IADSO_CIISA_IECS_REPO_TEST.git&quot;
  stage(&apos;Descargar Codigo (SCM)&apos;) {
    sh &quot;echo ${WORKSPACE}&quot;
    timeout(time: 3, unit: &apos;MINUTES&apos;){
      input = input(
        id: &apos;userInput&apos;, messasge: &apos;Valores para PMV&apos;,
        parameters: [
          string(description: &apos;Nombre del proyecto&apos;, name: &apos;Name_Project&apos;,defaultValue: &apos;IADSO_CIISA_IECS_REPO_TEST&apos;),
          string(description: &apos;Url de repositorio&apos;, name: &apos;Git_Url&apos;,defaultValue: &apos;https://github.com/Vicentezapata/IADSO_CIISA_IECS_REPO_TEST.git&apos;),
          choice(
            description: &apos;Tipo de repositorio&apos;,
            choices: [&apos;Publico&apos;, &apos;Privado&apos;],
            name: &apos;Type_Repo&apos;
          ),
          choice(
            description: &apos;Categorizacion&apos;,
            choices: [&apos;WEBPAGE&apos;, &apos;MOBILE&apos;],
            name: &apos;Type_Cat&apos;
          )
        ]
      )
    }
    println &apos;ECHOOOOO&apos;
    git input.Git_Url
  }

  stage(&apos;Control SAST&apos;) {
    // requires SonarQube Scanner 2.8+
    sh &quot;**************************************************************************************************&quot;
    sh &quot;*                                     CONTROL SAST                                               *&quot;
    sh &quot;**************************************************************************************************&quot;
    def scannerHome = tool &apos;sonarqube-scanner&apos;;//Mismo nombre que pusimos // en el global tool configuration
    sh &quot;TOOL SONNAR-SCANNER: ${scannerHome}&quot;
    withSonarQubeEnv(&apos;SonarQube&apos;) { // El nombre de servidor que //pusimos en Configuraci√≥n del sistema.
        sh &quot;${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=&apos;&quot;+input.Name_Project.replace(&quot; &quot;,&quot;_&quot;)+&quot;&apos; -Dsonar.sources=. -Dsonar.java.binaries=.&quot;
    }
  }
  stage(&apos;Control DAST&apos;) {
    sh &quot;**************************************************************************************************&quot;
    sh &quot;*                                     CONTROL DAST                                               *&quot;
    sh &quot;**************************************************************************************************&quot;  
    def docker = tool &apos;docker&apos;;//Mismo nombre que pusimos // en el global tool configuration
    sh &quot;TOOL docker: ${docker}&quot;
    //sh &quot;${docker}/bin/docker ps&quot;
    sh &quot;${docker}/bin/docker run -dit --name apache-app -p 8085:80 -v &apos;/home/ciisa/Escritorio/Proyecto de titulo//jenkins-scripts/servidores_DAST/apache/&apos;:/usr/local/apache2/htdocs/ httpd:2.4&quot;
    sh &quot;${docker}/bin/docker pull aquasec/trivy:latest&quot;
    sh &quot;${docker}/bin/docker run --rm -v &apos;/home/ciisa/Escritorio/Proyecto de titulo/trivy/trivy-cache/&apos;:/root/.cache/ aquasec/trivy:latest httpd:2.4 &gt; &apos;/opt/scripts/OutputTrivy.txt&apos;&quot;
    sh &quot;rm -rf /opt/scripts/servidores_DAST/apache/Capacitatec-landing-page&quot;
    sh &quot;git clone ${REPO} /opt/scripts/servidores_DAST/apache/Capacitatec-landing-page&quot;
    sh &quot;*************************************************************&quot; 
    sh &quot;*************** Vulnerabilidades detectadas  ****************&quot; 
    sh &quot;*************************************************************&quot; 
    sh &quot;cat /opt/scripts/OutputTrivy.txt&quot;
  }
}</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>1031656766</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>3422489422</long>
      </entry>
      <entry>
        <string>run</string>
        <long>2725216019</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>2341845443</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>752707238</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>24</iota>
    <head>1:24</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList">
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@4.7.1">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/Vicentezapata/IADSO_CIISA_IECS_REPO_TEST.git</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches class="singleton-list">
          <hudson.plugins.git.BranchSpec>
            <name>*/master</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="empty-list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.LocalBranch>
            <localBranch>master</localBranch>
          </hudson.plugins.git.extensions.impl.LocalBranch>
        </extensions>
      </scm>
      <node></node>
      <workspace>/var/jenkins_home/workspace/sonarTest</workspace>
      <changelogFile>/var/jenkins_home/jobs/sonarTest/builds/119/changelog3264948321414185779.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
  </checkouts>
</flow-build>