<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@2.40">
  <actions>
    <org.jenkinsci.plugins.workflow.cps.replay.ReplayFlowFactoryAction plugin="workflow-cps@2.90">
      <replacementLoadedScripts/>
    </org.jenkinsci.plugins.workflow.cps.replay.ReplayFlowFactoryAction>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>vzapata</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
        <entry>
          <org.jenkinsci.plugins.workflow.cps.replay.ReplayCause plugin="workflow-cps@2.90">
            <originalNumber>52</originalNumber>
          </org.jenkinsci.plugins.workflow.cps.replay.ReplayCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@2.19">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.workflow.support.steps.input.InputAction plugin="pipeline-input-step@2.12">
      <ids class="java.util.concurrent.CopyOnWriteArrayList"/>
    </org.jenkinsci.plugins.workflow.support.steps.input.InputAction>
    <com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder plugin="credentials@2.3.18">
      <boundCredentials class="concurrent-hash-map"/>
    </com.cloudbees.plugins.credentials.builds.CredentialsParameterBinder>
    <org.jenkinsci.plugins.workflow.support.steps.input.ApproverAction plugin="pipeline-input-step@2.12">
      <userId>vzapata</userId>
    </org.jenkinsci.plugins.workflow.support.steps.input.ApproverAction>
    <hudson.plugins.git.util.BuildData plugin="git@4.7.1">
      <buildsByBranchName>
        <entry>
          <string>refs/remotes/origin/master</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@3.7.1">
              <sha1>55d0a9ba5420e6d454208ab9245dc7fc422f1f00</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/master</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>53</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://github.com/Vicentezapata/LaBarraDelTiburon</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState plugin="workflow-scm-step@2.12">
      <revisionStates>
        <entry>
          <string>git https://github.com/Vicentezapata/LaBarraDelTiburon</string>
          <hudson.scm.SCMRevisionState_-None/>
        </entry>
      </revisionStates>
    </org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState>
    <hudson.plugins.sonar.action.SonarMarkerAction plugin="sonar@2.13.1"/>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2.90">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <hudson.plugins.sonar.action.SonarAnalysisAction plugin="sonar@2.13.1">
      <installationName>SonarQube</installationName>
      <installationUrl>http://sonarqube:9000</installationUrl>
      <ceTaskId>AXlUW5_D20xSlAZXlh96</ceTaskId>
      <url>http://sonarqube:9000/dashboard?id=LaBarraDelTiburon</url>
      <serverUrl>http://sonarqube:9000</serverUrl>
      <isNew>true</isNew>
      <isSkipped>false</isSkipped>
    </hudson.plugins.sonar.action.SonarAnalysisAction>
  </actions>
  <queueId>101</queueId>
  <timestamp>1620710642248</timestamp>
  <startTime>1620710642406</startTime>
  <result>FAILURE</result>
  <duration>38650</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>FAILURE</result>
    <script>node {
  stage(&apos;Descargar Codigo (SCM)&apos;) {
    timeout(time: 3, unit: &apos;MINUTES&apos;){
      input = input(
        id: &apos;userInput&apos;, messasge: &apos;Valores para PMV&apos;,
        parameters: [
          string(description: &apos;Nombre del proyecto&apos;, name: &apos;nameProject&apos;),
          string(description: &apos;Url de repositorio&apos;, name: &apos;gitUrl&apos;),
          choice(
            description: &apos;Tipo de repositorio&apos;,
            choices: [&apos;Publico&apos;, &apos;Privado&apos;],
            name: &apos;typeRepo&apos;
          )
        ]
      )
    }
    git input.gitUrl
  }

  stage(&apos;Control SAST&apos;) {
    // requires SonarQube Scanner 2.8+
    def scannerHome = tool &apos;sonarqube-scanner&apos;;//Mismo nombre que pusimos // en el global tool configuration
    withSonarQubeEnv(&apos;SonarQube&apos;) { // El nombre de servidor que //pusimos en Configuraci√≥n del sistema.
      //sh &quot;${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=&apos;&quot;+input.nameProject.replace(&quot; &quot;,&quot;_&quot;)+&quot;&apos; -Dsonar.sources=. -Dsonar.java.binaries=.&quot;
      docker.image(&apos;mysql:5&apos;).withRun(&apos;-e &quot;MYSQL_ROOT_PASSWORD=my-secret-pw&quot;&apos;) { c -&gt;
        docker.image(&apos;mysql:5&apos;).inside(&quot;--link ${c.id}:db&quot;) {
            /* Wait until mysql service is up */
            sh &apos;while ! mysqladmin ping -hdb --silent; do sleep 1; done&apos;
        }
        docker.image(&apos;centos:7&apos;).inside(&quot;--link ${c.id}:db&quot;) {
            /*
             * Run some tests which require MySQL, and assume that it is
             * available on the host name `db`
             */
            sh &apos;make check&apos;
        }
    }
    }
  }
}</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>732793990</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>10424033165</long>
      </entry>
      <entry>
        <string>run</string>
        <long>11162766051</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>3826737110</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>1964641209</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>28</iota>
    <head>1:28</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList">
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@4.7.1">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/Vicentezapata/LaBarraDelTiburon</url>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches class="singleton-list">
          <hudson.plugins.git.BranchSpec>
            <name>*/master</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="empty-list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.LocalBranch>
            <localBranch>master</localBranch>
          </hudson.plugins.git.extensions.impl.LocalBranch>
        </extensions>
      </scm>
      <node></node>
      <workspace>/var/jenkins_home/workspace/sonarTest</workspace>
      <changelogFile>/var/jenkins_home/jobs/sonarTest/builds/53/changelog3259712019612318093.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
  </checkouts>
</flow-build>